version: '3.8'
services:
  # These are the configurations for our Node app
  # When Docker Compose starts this container it will automatically
  # use the Dockerfile in the directory to configure it
  api-server:
    build: ./api
    #image: api-server
    container_name: api-server
    depends_on:
      # Our app does not work without our database
      # so this ensures our database is loaded first
      - postgres
    ports:
      - "3000:3000"
    volumes:
      # Maps our current project directory `.` to
      # our working directory in the container
      - ./:/usr/src/app/
      # node_modules workaround for volumes
      # https://stackoverflow.com/a/32785014
      - /usr/src/app/node_modules
    networks:
      - app-net
  # This is the configuration for our PostgreSQL database container
  # Note the `postgres` name is important, in out Node app when we refer
  # to  `host: "postgres"` that value is mapped on the network to the 
  # address of this container.
  postgres:
    image: postgres:14-alpine
    restart: always
    container_name: postgres
    environment:
      # You can set the value of environment variables
      # in your docker-compose.yml file
      # Our Node app will use these to connect
      # to the database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=ugf
    ports:
      # Standard port for PostgreSQL databases
      - "5432:5432"
    networks:
      - app-net
    volumes:
      # When the PostgresSQL container is started it will run any scripts
      # provided in the `docker-entrypoint-initdb.d` directory, this connects
      # our seed file to that directory so that it gets run
      - ./db/dbschema.sql:/docker-entrypoint-initdb.d/dbschema.sql
      - db-data:/var/lib/postgresql/data
  nginx:
#    image: nginx:1.19.7-alpine
    image: fabiocicerchia/nginx-lua:alpine-compat
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - app-net
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/upstream.conf:/etc/nginx/upstream.conf
      - ./nginx/error_log.log:/etc/nginx/error_log.log
      - ./views:/usr/share/nginx/html
      - ./css:/usr/share/nginx/html/css
      - ./fonts:/usr/share/nginx/html/fonts
      - ./icons:/usr/share/nginx/html/icons
      - ./images:/usr/share/nginx/html/images
      - ./js:/usr/share/nginx/html/js
networks:
  app-net:
volumes:
  db-data:
    name: ug_db-data