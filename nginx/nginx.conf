#user nginx;

events {

}

http {
    include mime.types;
    error_log /etc/nginx/error_log.log warn;
    resolver 127.0.0.11;
    server_tokens off;

    upstream api-server {
        least_conn;
        include /etc/nginx/upstream.conf;
        server api-server:3000;
    }
    proxy_hide_header X-Powered-By;
    add_header X-Frame-Options SAMEORIGIN;

    server {
        listen 80;
        location / {
            access_by_lua_block {
                local csrf_token = ngx.var.scheme .. "://" .. ngx.var.host .. ngx.var.request_uri .. ngx.var.remote_addr
                ngx.header["Set-Cookie"] = "_csrf=" .. csrf_token .. "; HttpOnly; Secure"
            }
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files ${uri}.html  /index.html =404;
        }
        location ~* \.(js|jpg|png|css|svg|eot|otf|ttf|woff)$ {
            root /usr/share/nginx/html/;
        }
        
        location /api  {
            access_by_lua_block {
                if ngx.req.get_method() == "POST" then
                    local csrf_cookie = ngx.var.cookie__csrf                   
                    local csrf_token = ngx.var.scheme .. "://" .. ngx.var.host .. "/contact" .. ngx.var.remote_addr
                    if not csrf_cookie or not csrf_token or csrf_cookie ~= csrf_token then
                        return ngx.exit(ngx.HTTP_FORBIDDEN)
                    end
                end
            }
            proxy_pass http://api-server$request_uri;            
	   }
    }
    
}